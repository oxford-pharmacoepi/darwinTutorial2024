---
pagetitle: "DrugUtilisation"
format:
  revealjs: 
    theme: [simple, styleOU.scss]
    incremental: true   
    slide-number: true
    chalkboard: true
    preview-links: auto
    margin: 0.07
    code-link: true
    code-line-numbers: false
    height: 900
    width: 1600
    footer: "Conducting 'Off-The-Shelf' Characterization Studies Using DARWIN EU Tools and the OMOP CDM"
execute:
  echo: true
  eval: true
  warning: false
  output-width: 100%
editor: visual
---

# DrugUtilisation

Drug cohort creation

## Introduction

Drug utilisation studies (DUS) were defined by the World Health Organization as studying the marketing, distribution, prescription, and use of medicinal products in a society, with special emphasis on the resulting medical and socioeconomic consequences (WHO, 2003).

. . .

This package aims to standardise and provide the tools to conduct Drug Utilisation studies as of the Darwin-EU Catalogue of Standard Analytics.

![](https://www.darwin-eu.org/templates/rt_horizon/custom/images/darwin-eu-logo.png){fig-align="center" width="45%"}

## Content

-   Create a base cohort of drug users

-   Apply inclusion criteria to the drug users cohort:

    -   Washout
    -   First observation
    -   Prior observation
    -   Date range

## The package

<br>

```{r, eval=FALSE}
install.packages("DrugUtilisation")
```

<br>

-   [v0.7.1](https://cran.r-project.org/package=DrugUtilisation) on cran.

-   [package website](https://darwin-eu-dev.github.io/DrugUtilisation/)

-   [Report an issue/Feature request](https://github.com/darwin-eu-dev/DrugUtilisation/issues/new)

## Create a reference to a cdm object

For this example we are going to use

```{r}
library(DBI)
library(duckdb)
library(CDMConnector)
library(dplyr)
library(here)

db <- dbConnect(duckdb(), dbdir = eunomia_dir())
cdm <- cdmFromCon(con = db, cdmSchema = "main", writeSchema = "main")
```

## Fix eunomia problems with drugs

Add a drug_strength table:

```{r}
x <- read.csv("https://raw.githubusercontent.com/darwin-eu-dev/DrugUtilisation/main/extras/mock_drug_strength.csv")
cdm <- insertTable(cdm = cdm, name = "drug_strength", table = x)
```

. . .

Fix quantity:

```{r}
cdm$drug_exposure <- cdm$drug_exposure |>
  mutate(quantity = days_supply) |>
  compute(name = "drug_exposure", temporary = FALSE)
```

## Generate a drug cohort

To generate a drug cohort we need a conceptSet (named list of concepts). Each element will be a different cohort, so we can instantiate multiple cohorts following the same logic at the same time.

Methods to create a conceptSet:

-   read it from JSON [CodelistGenerator::codesFromConceptSet](https://darwin-eu.github.io/CodelistGenerator/reference/codesFromConceptSet.html)

-   create from an ingredient [CodelistGenerator::getDrugIngredientCodes](https://darwin-eu.github.io/CodelistGenerator/reference/getDrugIngredientCodes.html)

-   create from a text search [CodelistGenerator::getCandidateCodes](https://darwin-eu.github.io/CodelistGenerator/reference/getCandidateCodes.html)

-   custom creation:

. . .

```{r, eval = FALSE}
list(concept1 = c(1, 2, 3, 4), concept2 = c(3, 4, 5))
```

## Generate a drug cohort

For this example we are going to use all records of `acteaminophen`:

. . .

```{r}
library(CodelistGenerator)
codelist <- getDrugIngredientCodes(cdm = cdm, name = "acetaminophen", nameStyle = "{concept_name}")
```

.

. . .

```{r}
codelist
```

.

. . .

```{r}
codelist$acetaminophen
```

## Generate a drug cohort

Once we have our conceptSet we can create a simple cohort:

. . .

```{r, message=FALSE}
library(DrugUtilisation)
cdm <- generateDrugUtilisationCohortSet(
  cdm = cdm,
  name = "dus_cohort",
  conceptSet = codelist
)
```

. . .

The results is the cdm object with the new cohort instantiated.

. . .

```{r, message=TRUE}
cdm
```

. . .

```{r}
cdm$dus_cohort
```

## Cohort objects

The cohort objects have some attributes:

```{r}
class(cdm$dus_cohort)
```

. . .

```{r}
names(attributes(cdm$dus_cohort))
```

. . .

-   Settings
-   Counts
-   Attrition
-   Codelist

## Cohort attributes

**Settings**:

```{r}
settings(cdm$dus_cohort)
```

. . .

**Cohort counts**:

```{r}
cohortCount(cdm$dus_cohort)
```

## Cohort attributes

**Cohort attrition**:

```{r}
attrition(cdm$dus_cohort)
```

. . .

**Cohort codelist**:

```{r}
cohortCodelist(cdm$dus_cohort, cohortId = 1)
```

## gapEra parameter

`gapEra` parameter can be used to concatenate different records.

. . .

```         
Number of days between two continuous exposures to be considered in the same era. Records that have fewer days between them than this gap will be concatenated into the same cohort record.
```

. . .

By default: `gapEra = 1` which means that:

-   Overlapping records will be joined (this will happen always).

-   Consecutive records will be joined

## gapEra parameter

```{r, echo=FALSE}
x1 <- dplyr::tibble(
  id = 1:10L,
  y = c(1, 0.9, 0.8, 0.7, 0, 0, 0, -0.5, -0.5, -1),
  color = factor(c("Records", "Records", "Records", "Records", "gapEra = 0", "gapEra = 0", "gapEra = 0",  "1 <= gapEra <= 6", "1 <= gapEra <= 6", "gapEra <= 7"), c("Records", "gapEra = 0",  "1 <= gapEra <= 6", "gapEra <= 7")),
  x_start = c(1, 15, 31, 45, 1, 31, 45, 1, 45, 1),
  x_end = c(20, 30, 38, 55, 30, 38, 55, 38, 55, 55)
) |>
  tidyr::pivot_longer(cols = c("x_start", "x_end"))
x2 <- dplyr::tibble(
  group = 1:8,
  x = c(1, 15, 20, 30, 31, 38, 45, 55),
  y_min = -1,
  y_max = c(1, 0.9, 1, 0.9, 0.8, 0.8, 0.7, 0.7)
) |>
  tidyr::pivot_longer(cols = c("y_min", "y_max"))
x2 |>
  ggplot2::ggplot(ggplot2::aes(x = x, y = value, group = group)) +
  ggplot2::geom_line(linetype="dotted") +
  ggplot2::geom_line(data = x1, mapping = ggplot2::aes(x = value, y = y, group = id, colour = color)) +
  ggplot2::geom_point(data = x1, mapping = ggplot2::aes(x = value, y = y, group = id, colour = color)) +
  ggplot2::scale_x_continuous(breaks = c(1, 15, 20, 30, 31, 38, 45, 55)) +
  ggplot2::scale_y_continuous(breaks = c(), limits = c(-1.3, 1.3), name = "")
```

## Generate a drug cohort

. . .

```{r, message=FALSE}
cdm <- generateDrugUtilisationCohortSet(
  cdm = cdm,
  name = "dus_cohort",
  conceptSet = codelist,
  gapEra = 30
)
```

## Some helpers

. . .

```{r, eval = FALSE}
?generateIngredientCohortSet
```

<br>

. . .

```{r, eval = FALSE}
?generateAtcCohortSet
```

## Inclusion criteria

Four functions to add inclusion criteria to our cohort:

-   Washout `requirePriorDrugWashout()`
-   First observation `requireIsFirstDrugEntry()`
-   Prior observation `requireObservationBeforeDrug()`
-   Date range `requireDrugInDateRange()`

## Inclusion criteria

`requirePriorDrugWashout()`

. . .

```{r, eval = FALSE}
cdm$dus_cohort |>
  requirePriorDrugWashout(days = 180)
```

## Inclusion criteria

`requireObservationBeforeDrug()`

. . .

```{r, eval = FALSE}
cdm$dus_cohort |>
  requireObservationBeforeDrug(days = 180)
```

## Inclusion criteria

`requireDrugInDateRange()`

. . .

```{r, eval = FALSE}
cdm$dus_cohort |>
  requireDrugInDateRange(dateRange = as.Date(c("1980-01-01", "2019-12-31")))
```

## Inclusion criteria

`requireIsFirstDrugEntry()`

. . .

```{r, eval = FALSE}
cdm$dus_cohort |>
  requireIsFirstDrugEntry()
```

## Inclusion criteria

```{r}
cdm <- generateDrugUtilisationCohortSet(
  cdm = cdm,
  name = "dus_cohort",
  conceptSet = codelist,
  gapEra = 30
)
cdm$dus_cohort <- cdm$dus_cohort |>
  requirePriorDrugWashout(days = 180) |>
  requireObservationBeforeDrug(days = 180) |>
  requireDrugInDateRange(dateRange = as.Date(c("1980-01-01", "2019-12-31")))
```

## Generate a drug cohort

. . .

```{r}
settings(cdm$dus_cohort) |> glimpse()
```

## Generate a drug cohort

. . .

```{r}
attrition(cdm$dus_cohort) |>
  glimpse()
```

## Important considerations

Not all inclusion criteria are commutable operations (A + B != B + A):

Not commutable:

-   `prior washout` + `prior observation` != `prior observation` + `prior washout`
-   `prior washout` + `first` != `first` + `prior washout`
-   `prior washout` + `date range` != `date range` + `prior washout`
-   `first` + `prior observation` != `prior observation` + `first`
-   `first` + `date range` != `date range` + `first`

. . .

Commutable:

-   `date range` + `prior observation` == `prior observation` + `date range`

## Recommended order

Having all this into account the recommended order to apply criteria would be:

1.  Require a prior drug washout or require first drug entry (particular case).

2.  Require a prior observation before the drug episode.

3.  Require the drugs to be in a certain date range.

## Vignette to create cohorts

<https://darwin-eu-dev.github.io/DrugUtilisation/articles/create_cohorts.html>
